{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthInterceptor {\n  intercept(req, next) {\n    const jwtToken = localStorage.getItem('JWT');\n    if (jwtToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${jwtToken}`)\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","intercept","req","next","jwtToken","localStorage","getItem","cloned","clone","headers","set","handle","factory","ɵfac"],"sources":["/Users/admin/spring-security-with-jwt-angular/Client FE/src/app/auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const jwtToken = localStorage.getItem('JWT');\n\n    if (jwtToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${jwtToken}`)\n      });\n      return next.handle(cloned);\n    }\n\n    return next.handle(req);\n  }\n}\n"],"mappings":";AAMA,MACaA,eAAe;EAE1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAE5C,IAAIF,QAAQ,EAAE;MACZ,MAAMG,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC;QACvBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,QAAQ,EAAE;OAC/D,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;;IAG5B,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EACzB;;AAbWF,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAY,OAAA,EAAfZ,eAAe,CAAAa;AAAA;SAAfb,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}